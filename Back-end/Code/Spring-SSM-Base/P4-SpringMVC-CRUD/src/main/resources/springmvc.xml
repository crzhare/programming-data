<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 配置自动扫描的包 -->
    <context:component-scan base-package="com.atguigu.springmvc"/>

    <!-- 配置视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--
        default-servlet-handler 将在 SpringMVC 上下文中定义一个 DefaultServletHttpRequestHandler,
        它会对进入 DispatcherServlet 的请求进行筛查, 如果发现是没有经过映射的请求, 就将该请求交由 WEB 应用服务器默认的
        Servlet 处理. 如果不是静态资源的请求，才由 DispatcherServlet 继续处理

        一般 WEB 应用服务器默认的 Servlet 的名称都是 default，若所使用的 WEB 服务器的默认 Servlet 名称不是 default，则需要通过 default-servlet-name 属性显式指定
    -->
    <mvc:default-servlet-handler/>
    <!--    使用下面的conversionService  -->
    <mvc:annotation-driven conversion-service="conversionService"/>

    <!-- 配置 ConversionService ，用于进行数据类型转换和格式化-->
    <!--
      org.springframework.context.support.ConversionServiceFactoryBean 用于进行数据类型转换
      org.springframework.format.support.FormattingConversionServiceFactoryBean 用于进行数据类型转换和格式化
      -->
    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <!-- 对应：com.atguigu.springmvc.converters.EmployeeConverter -->
                <ref bean="employeeConverter"/>
            </set>
        </property>
    </bean>

    <!-- 配置国际化资源文件 -->
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <!--
            i18n对应properties文件名
                i18n.properties 默认资源
                i18n_en_US.properties 英文资源
                i18n_zh_CN.properties 中文资源
        -->
        <property name="basename" value="i18n"/>
    </bean>

    <!-- 国际化相关：根据超链接切换 Local，配置 SessionLocalResolver，将语言配置放入 Session 中。 -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>
    <!--测试国际化-->
    <!--
        使用 SpringMVCTest.testI18n 处理
        <mvc:view-controller path="/i18n" view-name="i18n"/>
    -->
    <mvc:view-controller path="/i18n2" view-name="i18n2"/>

    <mvc:interceptors>
        <!-- 配置自定义的拦截器 -->
        <bean class="com.atguigu.springmvc.interceptors.FirstInterceptor"/>

        <!-- 配置拦截器的路径 -->
        <mvc:interceptor>
            <!--不作用的-->
            <!-- <mvc:exclude-mapping path=""/>-->
            <!--作用的-->
            <mvc:mapping path="/emps"/>
            <bean class="com.atguigu.springmvc.interceptors.SecondInterceptor"/>
        </mvc:interceptor>

        <!-- 配置 LocaleChanceInterceptor，用于支持根据超链接切换 Local，与 SessionLocaleResolver 配合工作。 -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>

    </mvc:interceptors>

    <!-- 配置 MultipartResolver，文件上传-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="1024000"/>
    </bean>

    <!-- 配置使用 SimpleMappingExceptionResolver 来映射异常 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!--SimpleMappingExceptionResolver自动将异常放入请求域中，默认的名称为 exception，通过通过下面方法配置。-->
        <property name="exceptionAttribute" value="ex"/>
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.ArrayIndexOutOfBoundsException">error</prop>
            </props>
        </property>
    </bean>

</beans>
